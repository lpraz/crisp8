module Font where

import Data.Word (Word8, Word16)
import Data.Array.Unboxed as UA

-- Will allow for other font styles, as long as they're 4x5, 1bpp and contiguous
-- Use a format that will fit directly into CHIP-8 RAM

defaultFont :: UA.UArray Word16 Word8
defaultFont = fontListToArray
    [ [0xF0, 0x90, 0x90, 0x90, 0xF0] 
    , [0x20, 0x60, 0x20, 0x20, 0x70]
    , [0xF0, 0x10, 0xF0, 0x80, 0xF0]
    , [0xF0, 0x10, 0xF0, 0x10, 0xF0]
    , [0x90, 0x90, 0xF0, 0x10, 0x10]
    , [0xF0, 0x80, 0xF0, 0x10, 0xF0]
    , [0xF0, 0x80, 0xF0, 0x90, 0xF0]
    , [0xF0, 0x10, 0x20, 0x40, 0x40]
    , [0xF0, 0x90, 0xF0, 0x90, 0xF0]
    , [0xF0, 0x90, 0xF0, 0x90, 0x90]
    , [0xE0, 0x90, 0xE0, 0x90, 0xE0]
    , [0xF0, 0x80, 0x80, 0x80, 0xF0]
    , [0xE0, 0x90, 0x90, 0x90, 0xE0]
    , [0xF0, 0x80, 0xF0, 0x80, 0xF0]
    , [0xF0, 0x80, 0xF0, 0x80, 0x80]
    ]

fontListToArray :: [[Word8]] -> UA.UArray Word16 Word8
fontListToArray list = array (0, maxBound) zippedList
    where
      flattenedList = concat list
      zippedList = zip [0..] flattenedList